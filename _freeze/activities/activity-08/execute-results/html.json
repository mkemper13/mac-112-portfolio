{
  "hash": "513ddbb7b60dc4abef42899a6cc5aa51",
  "result": {
    "engine": "knitr",
    "markdown": "## Exercises\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nelections <- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n### Exercise 1: select practice {-}\n\n6 verbs: `select`, `filter`, `arrange`, `mutate`, `summarize`, `group_by`\n\nUse `select()` to create a simplified dataset that we'll use throughout the exercises below.\n\n-   Store this dataset as `elections_small`.\n-   Only keep the following variables: state_name, county_name, total_votes_20, repub_pct_20, dem_pct_20, total_votes_16, dem_pct_16\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define elections_small\nelections_small <- elections |>\nselect(state_name, county_name, total_votes_20, repub_pct_20, dem_pct_20, total_votes_16, dem_pct_16)\n\n# Check out the first 6 rows to confirm your code did what you think it did!\nhead(elections_small)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16\n1          24661      23.96\n2          94090      19.57\n3          10390      46.66\n4           8748      21.42\n5          25384       8.47\n6           4701      75.09\n```\n\n\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 2: filter demo {-}\n\n6 verbs: `select`, `filter`, `arrange`, `mutate`, `summarize`, `group_by`\n\nWhereas `select()` selects certain *variables* or columns, `filter()` keeps certain *units of observation* or rows relative to their outcome on certain variables. To this end, we must:\n\n-   Identify the variable(s) that are relevant to the filter.\n\n-   Use a \"logical comparison operator\" to define which values of the variable to *keep*:\n\n    | symbol             | meaning                   |\n    |:-------------------|:--------------------------|\n    | `==`               | equal to                  |\n    | `!=`               | not equal to              |\n    | `>`                | greater than              |\n    | `>=`               | greater than or equal to  |\n    | `<`                | less than                 |\n    | `<=`               | less than or equal to     |\n    | `%in% c(???, ???)` | a list of multiple values |\n\n-   Use quotes `\"\"` when specifying outcomes of interest for a categorical variable.\n\n\\\n\\\n\n::: {.callout-tip title=\"Commenting/Uncommenting Code\"}\n\nTo comment/uncomment several lines of code at once, highlight them then click <kbd>ctrl/cmd+shift+c</kbd>.\n\n:::\n\n\\\n\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Keep only data on counties in Hawaii\nelections_small |>\n  filter(state_name == \"Hawaii\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  state_name     county_name total_votes_20 repub_pct_20 dem_pct_20\n1     Hawaii   Hawaii County          87814        30.63      66.88\n2     Hawaii Honolulu County         382114        35.66      62.51\n3     Hawaii    Kauai County          33497        34.58      63.36\n4     Hawaii     Maui County          71044        31.14      66.59\n  total_votes_16 dem_pct_16\n1          64865      63.61\n2         285683      61.48\n3          26335      62.49\n4          51942      64.45\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# What does this do?\nelections_small |> \n  filter(state_name %in% c(\"Hawaii\", \"Delaware\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  state_name       county_name total_votes_20 repub_pct_20 dem_pct_20\n1   Delaware       Kent County          87025        47.12      51.19\n2   Delaware New Castle County         287633        30.72      67.81\n3   Delaware     Sussex County         129352        55.07      43.82\n4     Hawaii     Hawaii County          87814        30.63      66.88\n5     Hawaii   Honolulu County         382114        35.66      62.51\n6     Hawaii      Kauai County          33497        34.58      63.36\n7     Hawaii       Maui County          71044        31.14      66.59\n  total_votes_16 dem_pct_16\n1          74253      44.91\n2         261468      62.30\n3         105814      37.17\n4          64865      63.61\n5         285683      61.48\n6          26335      62.49\n7          51942      64.45\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Keep only data on counties where the Republican got MORE THAN 93.97% of the vote in 2020\n# THINK: What variable is relevant here?\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Keep only data on counties where the Republican got AT LEAST 93.97% of the vote in 2020\n# This should have 1 more row than your answer above\n```\n:::\n\n\nWe can also filter with respect to 2 rules! Here, think what variables are relevant.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Keep only data on counties in Texas where the Democrat got more than 65% of the vote in 2020\n# Do this 2 ways.\n# Method 1: 2 filters with 1 condition each\n#elections_small |> \n#  filter(___) |> \n#  filter(___)\n\n# Method 2: 1 filter with 2 conditions\n#elections_small |> \n#  filter(___, ___)\n```\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 3: arrange demo {-}\n\n6 verbs: `select`, `filter`, `arrange`, `mutate`, `summarize`, `group_by`\n\n`arrange()` arranges or sorts the *rows* in a dataset according to a given column or variable, in ascending or descending order:\n\n`arrange(variable)`, `arrange(desc(variable))`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Arrange the counties in elections_small from lowest to highest percentage of 2020 Republican support\n# Print out just the first 6 rows\n elections_small |> \n   arrange(repub_pct_20) |> \n   head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            state_name            county_name total_votes_20 repub_pct_20\n1 District of Columbia   District of Columbia         344356         5.40\n2             Maryland Prince George's County         424855         8.73\n3             Maryland         Baltimore city         237461        10.69\n4             Virginia        Petersburg city          14118        11.22\n5             New York        New York County         694904        12.26\n6           California   San Francisco County         443458        12.72\n  dem_pct_20 total_votes_16 dem_pct_16\n1      92.15         280272      92.85\n2      89.26         351091      89.33\n3      87.28         208980      85.44\n4      87.75          13717      87.52\n5      86.78         591368      87.17\n6      85.27         365295      85.53\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Arrange the counties in elections_small from highest to lowest percentage of 2020 Republican support\n# Print out just the first 6 rows\n elections_small |> \n   arrange(desc(repub_pct_20)) |> \n   head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  state_name      county_name total_votes_20 repub_pct_20 dem_pct_20\n1      Texas   Roberts County            550        96.18       3.09\n2      Texas    Borden County            416        95.43       3.85\n3      Texas      King County            159        94.97       5.03\n4    Montana  Garfield County            813        93.97       5.04\n5      Texas Glasscock County            653        93.57       5.97\n6   Nebraska     Grant County            402        93.28       4.98\n  total_votes_16 dem_pct_16\n1            550       3.64\n2            365       8.49\n3            159       3.14\n4            715       4.76\n5            602       5.65\n6            394       5.08\n```\n\n\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 4: mutate demo {-}\n\n6 verbs: `select`, `filter`, `arrange`, `mutate`, `summarize`, `group_by`\n\n`mutate()` can either transform / mutate an existing variable (column), or define a new variable based on existing ones.\n\n#### Part a {-}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# What did this code do?\n elections_small |> \n   mutate(diff_20 = repub_pct_20 - dem_pct_20) |> \n   head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 diff_20\n1          24661      23.96   44.42\n2          94090      19.57   53.76\n3          10390      46.66    7.66\n4           8748      21.42   57.73\n5          25384       8.47   80.00\n6           4701      75.09  -49.86\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n #What did this code do?\n elections_small |> \n   mutate(repub_votes_20 = round(total_votes_20 * repub_pct_20/100)) |> \n   head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 repub_votes_20\n1          24661      23.96          19839\n2          94090      19.57          83542\n3          10390      46.66           5622\n4           8748      21.42           7525\n5          25384       8.47          24711\n6           4701      75.09           1146\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# What did this code do?\n# elections_small |> \n#   mutate(repub_win_20 = repub_pct_20 > dem_pct_20) |> \n#   head()\n```\n:::\n\n\n#### Part b {-}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# You try\n# Define a variable that calculates the change in Dem support in 2020 vs 2016\nelections_small |> \n  mutate(dem_diff = dem_pct_20 - dem_pct_16) |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 dem_diff\n1          24661      23.96     3.06\n2          94090      19.57     2.84\n3          10390      46.66    -0.87\n4           8748      21.42    -0.72\n5          25384       8.47     1.10\n6           4701      75.09    -0.39\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# You try\n# Define a variable that determines whether the Dem support was higher in 2020 than in 2016 (TRUE/FALSE)\nelections_small |> \n  mutate(dem_supp = ifelse(dem_pct_20 > dem_pct_16, TRUE, FALSE)) |> \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  state_name    county_name total_votes_20 repub_pct_20 dem_pct_20\n1    Alabama Autauga County          27770        71.44      27.02\n2    Alabama Baldwin County         109679        76.17      22.41\n3    Alabama Barbour County          10518        53.45      45.79\n4    Alabama    Bibb County           9595        78.43      20.70\n5    Alabama  Blount County          27588        89.57       9.57\n6    Alabama Bullock County           4613        24.84      74.70\n  total_votes_16 dem_pct_16 dem_supp\n1          24661      23.96     TRUE\n2          94090      19.57     TRUE\n3          10390      46.66    FALSE\n4           8748      21.42    FALSE\n5          25384       8.47     TRUE\n6           4701      75.09    FALSE\n```\n\n\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 5: Pipe series {-}\n\nLet's now combine these verbs into a pipe series!\n\n#### Part a {-}\n\n::: {.callout-important title=\"Think then Run\"}\n\nBEFORE running the below chunk, what do you think it will produce?\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n elections_small |> \n   filter(state_name == \"Wisconsin\",\n          repub_pct_20 < dem_pct_20) |> \n   arrange(desc(total_votes_20)) |> \n   head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  state_name       county_name total_votes_20 repub_pct_20 dem_pct_20\n1  Wisconsin  Milwaukee County         458971        29.27      69.13\n2  Wisconsin       Dane County         344791        22.85      75.46\n3  Wisconsin       Rock County          85360        43.51      54.66\n4  Wisconsin  La Crosse County          67884        42.25      55.75\n5  Wisconsin Eau Claire County          58275        43.49      54.26\n6  Wisconsin    Portage County          40603        47.53      50.31\n  total_votes_16 dem_pct_16\n1         434970      66.44\n2         304729      71.38\n3          75043      52.42\n4          62785      51.61\n5          54080      50.43\n6          38123      48.59\n```\n\n\n:::\n:::\n\n\n#### Part b {-}\n\n::: {.callout-important title=\"Think then Run\"}\n\nBEFORE trying, what do you think will happen if you change the order of filter and arrange:\n\n-   the results will be the same\n-   we'll get an error\n-   we won't get an error, but the results will be different\n\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Now try it. Change the order of filter and arrange below.\n elections_small |> \n   filter(state_name == \"Wisconsin\",\n          repub_pct_20 < dem_pct_20) |> \n   arrange(desc(total_votes_20)) |> \n   head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  state_name       county_name total_votes_20 repub_pct_20 dem_pct_20\n1  Wisconsin  Milwaukee County         458971        29.27      69.13\n2  Wisconsin       Dane County         344791        22.85      75.46\n3  Wisconsin       Rock County          85360        43.51      54.66\n4  Wisconsin  La Crosse County          67884        42.25      55.75\n5  Wisconsin Eau Claire County          58275        43.49      54.26\n6  Wisconsin    Portage County          40603        47.53      50.31\n  total_votes_16 dem_pct_16\n1         434970      66.44\n2         304729      71.38\n3          75043      52.42\n4          62785      51.61\n5          54080      50.43\n6          38123      48.59\n```\n\n\n:::\n:::\n\n\n#### Part c {-}\n\nSo the order of `filter()` and `arrange()` did *not* matter -- rerranging them produces the same results. BUT what is one *advantage* of filtering before arranging?\n\n\nIt’s more “computationally efficient” to get rid of some rows before arranging.\n\n#### Part d {-}\n\n::: {.callout-important title=\"Think then Run\"}\n\nBEFORE running the below chunk, what do you think it will produce?\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n elections_small |> \n   filter(state_name == \"Delaware\") |> \n   mutate(repub_win_20 = repub_pct_20 > dem_pct_20) |> \n   select(county_name, repub_pct_20, dem_pct_20, repub_win_20)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        county_name repub_pct_20 dem_pct_20 repub_win_20\n1       Kent County        47.12      51.19        FALSE\n2 New Castle County        30.72      67.81        FALSE\n3     Sussex County        55.07      43.82         TRUE\n```\n\n\n:::\n:::\n\n\n#### Part e {-}\n\n::: {.callout-important title=\"Think then Run\"}\n\nBEFORE trying, what do you think will happen if you change the order of mutate and select:\n\n-   the results will be the same\n-   we'll get an error\n-   we won't get an error, but the results will be different\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Now try it. Change the order of mutate and select below.\n elections_small |> \n   filter(state_name == \"Delaware\") |> \n   mutate(repub_win_20 = repub_pct_20 > dem_pct_20) |> \n   select(county_name, repub_pct_20, dem_pct_20, repub_win_20)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        county_name repub_pct_20 dem_pct_20 repub_win_20\n1       Kent County        47.12      51.19        FALSE\n2 New Castle County        30.72      67.81        FALSE\n3     Sussex County        55.07      43.82         TRUE\n```\n\n\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 6: DIY pipe series {-}\n\nWe've now learned 4 of the 6 wrangling verbs: `select`, `filter`, `mutate`, `arrange.` Let's practice combining these into pipe series. Here are some hot tips:\n\n-   Before writing any code, translate the prompt: how many distinct wrangling steps are needed and what verb do we need in each step?\n-   Add each verb one at a time -- don't try writing a whole chunk at once.\n\n### Part a {-}\n\nShow just the counties in Minnesota and their Democratic 2020 vote percentage, from highest to lowest. Your answer should have just 2 columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nelections_small |>\n  filter(state_name == \"Minnesota\") |>\n  select(county_name, dem_pct_20) |> \n  arrange(desc(dem_pct_20))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                county_name dem_pct_20\n1             Ramsey County      71.50\n2           Hennepin County      70.46\n3               Cook County      65.58\n4          St. Louis County      56.64\n5             Dakota County      55.73\n6            Olmsted County      54.16\n7         Washington County      53.46\n8         Blue Earth County      50.84\n9               Clay County      50.74\n10              Lake County      50.64\n11          Nicollet County      50.31\n12           Carlton County      49.58\n13            Winona County      49.07\n14              Rice County      48.76\n15          Mahnomen County      48.26\n16             Anoka County      47.79\n17          Beltrami County      47.24\n18            Carver County      46.37\n19             Mower County      46.00\n20             Scott County      45.52\n21           Houston County      42.42\n22           Goodhue County      41.23\n23          Freeborn County      40.96\n24            Norman County      40.80\n25            Itasca County      40.61\n26       Koochiching County      38.41\n27          Watonwan County      38.20\n28           Kittson County      38.12\n29           Stevens County      37.80\n30           Stearns County      37.58\n31          Fillmore County      37.48\n32            Steele County      37.47\n33         Kandiyohi County      36.12\n34            Aitkin County      35.98\n35              Lyon County      35.94\n36     Lac qui Parle County      35.79\n37           Wabasha County      35.78\n38             Grant County      35.58\n39          Traverse County      35.46\n40         Big Stone County      35.41\n41        Pennington County      35.29\n42              Pope County      35.27\n43              Polk County      34.88\n44              Cass County      34.68\n45            Wright County      34.49\n46           Hubbard County      34.42\n47             Swift County      34.35\n48         Crow Wing County      34.17\n49           Chisago County      34.15\n50            Becker County      33.96\n51              Pine County      33.87\n52          Le Sueur County      33.73\n53          Chippewa County      33.67\n54            Nobles County      33.65\n55            Waseca County      33.65\n56             Dodge County      33.47\n57        Otter Tail County      32.85\n58            Benton County      32.70\n59           Douglas County      32.56\n60             Brown County      32.48\n61         Sherburne County      32.48\n62         Faribault County      31.98\n63          Red Lake County      31.47\n64          Renville County      30.71\n65            McLeod County      30.64\n66   Yellow Medicine County      30.54\n67           Lincoln County      30.08\n68        Cottonwood County      30.03\n69           Kanabec County      30.02\n70            Martin County      30.02\n71           Jackson County      29.99\n72        Mille Lacs County      29.98\n73            Wilkin County      29.91\n74              Rock County      29.69\n75            Murray County      29.60\n76            Isanti County      29.45\n77            Sibley County      28.60\n78            Meeker County      28.58\n79           Redwood County      28.43\n80 Lake of the Woods County      27.87\n81        Clearwater County      26.76\n82         Pipestone County      26.44\n83            Wadena County      26.35\n84            Roseau County      25.98\n85          Marshall County      25.33\n86              Todd County      24.79\n87          Morrison County      22.33\n```\n\n\n:::\n:::\n\n\n#### Part b {-}\n\nCreate a new dataset named `mn_wi` that sorts the counties in Minnesota and Wisconsin from lowest to highest in terms of the *change* in Democratic vote percentage in 2020 vs 2016. This dataset should include the following variables (and only these variables): `state_name`, `county_name`, `dem_pct_20`, `dem_pct_16`, and a variable measuring the change in Democratic vote percentage in 2020 vs 2016.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the dataset\n# Only store the results once you're confident that they're correct\n\n\n# Check out the first 6 rows to confirm your results\n```\n:::\n\n\n#### Part c {-}\n\nConstruct and discuss a plot of the county-level change in Democratic vote percent in 2020 vs 2016, and how this differs between Minnesota and Wisconsin.\n\n\n::: {.cell}\n\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 7: summarize demo {-}\n\n6 verbs: `select`, `filter`, `arrange`, `mutate`, `summarize`, `group_by`\n\nLet's talk about the last 2 verbs. `summarize()` (or equivalently `summarise()`) takes an entire data frame as input and outputs a single row with one or more summary statistics. For each chunk below, indicate what the code does.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# What does this do?\n# elections_small |> \n#   summarize(median(repub_pct_20))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# What does this do?\n# elections_small |> \n#   summarize(median_repub = median(repub_pct_20))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# What does this do?\n# elections_small |> \n#   summarize(median_repub = median(repub_pct_20), total_votes = sum(total_votes_20))\n```\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 8: `summarize` + `group_by` demo {-}\n\n6 verbs: `select`, `filter`, `arrange`, `mutate`, `summarize`, `group_by`\n\nFinally, `group_by()` groups the units of observation or rows of a data frame by a specified set of variables. Alone, this function doesn't change the appearance of our dataset or seem to do anything at all:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n elections_small |> \n   group_by(state_name) |> \n   head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n# Groups:   state_name [1]\n  state_name county_name   total_votes_20 repub_pct_20 dem_pct_20 total_votes_16\n  <chr>      <chr>                  <int>        <dbl>      <dbl>          <int>\n1 Alabama    Autauga Coun…          27770         71.4      27.0           24661\n2 Alabama    Baldwin Coun…         109679         76.2      22.4           94090\n3 Alabama    Barbour Coun…          10518         53.4      45.8           10390\n4 Alabama    Bibb County             9595         78.4      20.7            8748\n5 Alabama    Blount County          27588         89.6       9.57          25384\n6 Alabama    Bullock Coun…           4613         24.8      74.7            4701\n# ℹ 1 more variable: dem_pct_16 <dbl>\n```\n\n\n:::\n:::\n\n\nThough it does change the underlying structure of the dataset:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n #Check out the structure before and after group_by\n elections_small |> \n   class()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"data.frame\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# \n elections_small |> \n   group_by(state_name) |> \n   class()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"grouped_df\" \"tbl_df\"     \"tbl\"        \"data.frame\"\n```\n\n\n:::\n:::\n\n\nWhere it really shines is in partnership with `summarize()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n #What does this do?\n #(What if we didn't use group_by?)\n elections_small |> \n   group_by(state_name) |> \n   summarize(median_repub = median(repub_pct_20), total_votes = sum(total_votes_20)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 3\n   state_name           median_repub total_votes\n   <chr>                       <dbl>       <int>\n 1 Alabama                      70.6     2323304\n 2 Arizona                      57.9     3387326\n 3 Arkansas                     72.1     1219069\n 4 California                   44.8    17495906\n 5 Colorado                     56.2     3256953\n 6 Connecticut                  41.0     1824280\n 7 Delaware                     47.1      504010\n 8 District of Columbia          5.4      344356\n 9 Florida                      64.6    11067456\n10 Georgia                      68       4997716\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n\n::: {.callout-warning title=\"Reflect\"}\n\nNotice that `group_by()` with `summarize()` produces new data frame or tibble! But the units of observation are now states instead of counties within states.\n\n:::\n\n\\\n\\\n\\\n\\\n\n### Exercise 9: DIY {-}\n\nLet's practice (some of) our 6 verbs: `select`, `filter`, `arrange`, `mutate`, `summarize`, `group_by` Remember:\n\n-   Before writing any code, translate the given prompts: how many distinct wrangling steps are needed and what verb do we need in each step?\n-   Add each verb one at a time.\n\n#### Part a {-}\n\nNOTE: Part a is a challenge exercise. If you get really stuck, move on to Part b which is the same overall question, but with hints.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Sort the *states* from the most to least total votes cast in 2020\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# In 2020, what were the total number of votes for the Democratic candidate and the total number of votes for the Republican candidate in each *state*?\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# What states did the Democratic candidate win in 2020?\n```\n:::\n\n\n#### Part b {-}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Sort the states from the most to least total votes cast in 2020\n# HINT: Calculate the total number of votes in each state, then sort\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# In 2020, what were the total number of votes for the Democratic candidate and the total number of votes for the Republican candidate in each state?\n# HINT: First calculate the number of Dem and Repub votes in each *county*\n# Then group and summarize these by state\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# What states did the Democratic candidate win in 2020?\n# HINT: Start with the results from the previous chunk, and then keep only some rows\n```\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 10: Practice on new data {-}\n\nRecall the World Cup football/soccer data from TidyTuesday:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nworld_cup <- read.csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv\")\n```\n:::\n\n\nYou can find a codebook [here](https://github.com/rfordatascience/tidytuesday/tree/master/data/2022/2022-11-29). Use (some of) our 6 verbs (`select`, `filter`, `arrange`, `mutate`, `summarize`, `group_by`) and data viz to address the following prompts.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# In what years did Brazil win the World Cup?\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# What were the 6 World Cups with the highest attendance?\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Construct a univariate plot of goals_scored (no wrangling necessary)\n# This provides a visual summary of how the number of goals_scored varies from World Cup to World Cup\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Let's follow up the plot with some more precise numerical summaries\n# Calculate the min, median, and max number of goals_scored across all World Cups\n# NOTE: Visually compare these numerical summaries to what you observed in the plot\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Construct a bivariate plot of how the number of goals_scored in the World Cup has changed over the years\n# No wrangling necessary\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Our above summaries might be a bit misleading.\n# The number of games played at the World Cup varies.\n# Construct a bivariate plot of how the typical number of goals per game has changed over the years\n```\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 11: Practice on your data {-}\n\nReturn to the TidyTuesday data you're using in Homework 3. Use your new wrangling skills to play around. What new insights can you gain?!\n",
    "supporting": [
      "activity-08_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}