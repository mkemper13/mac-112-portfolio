{
  "hash": "0bacb617dbd15156ca3092947cf06cd4",
  "result": {
    "engine": "knitr",
    "markdown": "## Exercises\n\n### Exercise 1: Time slots {.unnumbered}\n\nThe `courses` data includes *actual* data scraped from Mac's [class schedule](https://macadmsys.macalester.edu/macssb/customPage/page/classSchedule). (Thanks to Prof Leslie Myint for the scraping code!!)\n\nIf you want to learn how to scrape data, take COMP/STAT 212, Intermediate Data Science! NOTE: For simplicity, I removed classes that had \"TBA\" for the `days`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\ncourses <- read.csv(\"https://mac-stat.github.io/data/registrar.csv\")\n\n# Check it out\nhead(courses)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       number   crn                                                name  days\n1 AMST 112-01 10318         Introduction to African American Literature M W F\n2 AMST 194-01 10073              Introduction to Asian American Studies M W F\n3 AMST 194-F1 10072 What’s After White Empire - And Is It Already Here?  T R \n4 AMST 203-01 10646 Politics and Inequality: The American Welfare State M W F\n5 AMST 205-01 10842                         Trans Theories and Politics  T R \n6 AMST 209-01 10474                   Civil Rights in the United States   W  \n             time      room             instructor avail_max\n1 9:40 - 10:40 am  MAIN 009       Daylanne English    3 / 20\n2  1:10 - 2:10 pm MUSIC 219          Jake Nagasawa   -4 / 16\n3  3:00 - 4:30 pm   HUM 214 Karin Aguilar-San Juan    0 / 14\n4 9:40 - 10:40 am  CARN 305          Lesley Lavery    3 / 25\n5  3:00 - 4:30 pm  MAIN 009              Myrl Beam   -2 / 20\n6 7:00 - 10:00 pm  MAIN 010         Walter Greason   -1 / 15\n```\n\n\n:::\n:::\n\n\nUse our more familiar wrangling tools to warm up.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Construct a table that indicates the number of classes offered in each day/time slot\n# Print only the 6 most popular time slots\ncourses%>%\n  count(days, time)%>%\n  arrange(desc(n))%>%\n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   days             time  n\n1 M W F 10:50 - 11:50 am 76\n2  T R   9:40 - 11:10 am 71\n3 M W F  9:40 - 10:40 am 68\n4 M W F   1:10 - 2:10 pm 66\n5  T R    3:00 - 4:30 pm 62\n6  T R    1:20 - 2:50 pm 59\n```\n\n\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 2: Prep the data {.unnumbered}\n\nSo that we can analyze it later, we want to wrangle the `courses` data:\n\n-   Let's get some enrollment info:\n    -   Split `avail_max` into 2 separate variables: `avail` and `max`.\n    -   Use `avail` and `max` to define a new variable called `enrollment`. HINT: You'll need `as.numeric()`\n-   Split the course `number` into 3 separate variables: `dept`, `number`, and `section`. HINT: You can use `separate()` to split a variable into 3, not just 2 new variables.\n\nStore this as `courses_clean` so that you can use it later.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncourses_clean <- courses%>%\n  separate(avail_max, c(\"avail\", \"max\"), sep = \" / \") |> \n  mutate(enroll = as.numeric(max) - as.numeric(avail)) |> \n  separate(number, c(\"dept\", \"number\", \"section\"))\n  \nhead(courses_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  dept number section   crn                                                name\n1 AMST    112      01 10318         Introduction to African American Literature\n2 AMST    194      01 10073              Introduction to Asian American Studies\n3 AMST    194      F1 10072 What’s After White Empire - And Is It Already Here?\n4 AMST    203      01 10646 Politics and Inequality: The American Welfare State\n5 AMST    205      01 10842                         Trans Theories and Politics\n6 AMST    209      01 10474                   Civil Rights in the United States\n   days            time      room             instructor avail max enroll\n1 M W F 9:40 - 10:40 am  MAIN 009       Daylanne English     3  20     17\n2 M W F  1:10 - 2:10 pm MUSIC 219          Jake Nagasawa    -4  16     20\n3  T R   3:00 - 4:30 pm   HUM 214 Karin Aguilar-San Juan     0  14     14\n4 M W F 9:40 - 10:40 am  CARN 305          Lesley Lavery     3  25     22\n5  T R   3:00 - 4:30 pm  MAIN 009              Myrl Beam    -2  20     22\n6   W   7:00 - 10:00 pm  MAIN 010         Walter Greason    -1  15     16\n```\n\n\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 3: Courses by department {.unnumbered}\n\nUsing `courses_clean`...\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Identify the 6 departments that offered the most sections\ncourses_clean%>%\n  count(dept)%>%\n  arrange(desc(n))%>%\n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  dept  n\n1 SPAN 45\n2 BIOL 44\n3 ENVI 38\n4 PSYC 37\n5 CHEM 33\n6 COMP 31\n```\n\n\n:::\n\n```{.r .cell-code}\n# Identify the 6 departments with the longest average course titles\ncourses_clean%>%\n  mutate(length = str_length(name))%>%\n  group_by(dept)%>%\n  summarize(avg_length = mean(length))%>%\n  arrange(desc(avg_length))%>%\n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  dept  avg_length\n  <chr>      <dbl>\n1 WGSS        46.3\n2 INTL        41.4\n3 EDUC        39.4\n4 MCST        39.4\n5 POLI        37.4\n6 AMST        37.3\n```\n\n\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 4: STAT courses {.unnumbered}\n\n#### Part a {.unnumbered}\n\nGet a subset of `courses_clean` that only includes courses taught by Alicia Johnson.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncourses_clean%>%\n  filter(instructor == \"Alicia Johnson\")%>%\n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  dept number section   crn                         name  days            time\n1 STAT    253      01 10806 Statistical Machine Learning  T R  9:40 - 11:10 am\n2 STAT    253      02 10807 Statistical Machine Learning  T R   1:20 - 2:50 pm\n3 STAT    253      03 10808 Statistical Machine Learning  T R   3:00 - 4:30 pm\n        room     instructor avail max enroll\n1 THEATR 206 Alicia Johnson    -3  20     23\n2 THEATR 206 Alicia Johnson    -3  20     23\n3 THEATR 206 Alicia Johnson     2  20     18\n```\n\n\n:::\n:::\n\n\n#### Part b {.unnumbered}\n\nCreate a new dataset from `courses_clean`, named `stat`, that only includes STAT sections. In this dataset:\n\n-   In the course names:\n\n    -   Remove \"Introduction to\" from any name.\n    -   Shorten \"Statistical\" to \"Stat\" where relevant.\n\n-   Define a variable that records the `start_time` for the course.\n\n-   Keep only the `number, name, start_time, enroll` columns.\n\n-   The result should have 19 rows and 4 columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstat <- courses_clean%>%\n  filter(dept == \"STAT\")%>%\n  mutate(name = str_replace(name, \"Introduction to\",\"\" ))%>%\n  mutate(name = str_replace(name, \"Statistical\", \"Stat\"))%>%\n  mutate(start_time = str_sub(time, 1, 5))%>%\n  select(number, name, start_time, enroll)\n\nstat\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   number                      name start_time enroll\n1     112              Data Science      3:00      27\n2     112              Data Science      9:40      21\n3     112              Data Science      1:20      25\n4     125              Epidemiology      12:00     26\n5     155             Stat Modeling      1:10      32\n6     155             Stat Modeling      9:40      24\n7     155             Stat Modeling      10:50     26\n8     155             Stat Modeling      3:30      25\n9     155             Stat Modeling      1:20      30\n10    155             Stat Modeling      3:00      27\n11    212 Intermediate Data Science      9:40      11\n12    212 Intermediate Data Science      1:20      11\n13    253     Stat Machine Learning      9:40      23\n14    253     Stat Machine Learning      1:20      23\n15    253     Stat Machine Learning      3:00      18\n16    354               Probability      3:00      22\n17    452           Correlated Data      9:40       7\n18    452           Correlated Data      1:20       8\n19    456  Projects in Data Science      9:40      11\n```\n\n\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 5: More cleaning {.unnumbered}\n\nIn the next exercises, we'll dig into enrollments. Let's get the data ready for that analysis here. Make the following changes to the `courses_clean` data. Because they have different enrollment structures, and we don't want to compare apples and oranges, *remove* the following:\n\n-   all sections in `PE` and `INTD` (interdisciplinary studies courses)\n\n-   all music ensembles and dance practicums, i.e. all MUSI and THDA classes with numbers less than 100. HINT: `!(dept == \"MUSI\" & as.numeric(number) < 100)`\n\n-   all lab sections. Be careful which variable you use here. For example, you don't want to search by \"Lab\" and accidentally eliminate courses with words such as \"Labor\".\n\nSave the results as `enrollments` (don't overwrite `courses_clean`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenrollments <- courses_clean%>%\n  filter(dept != \"PE\", dept != \"INTD\")%>%\n  filter(!(dept == \"MUSI\" & as.numeric(number) < 100))%>%\n  filter(!(dept == \"THDA\" & as.numeric(number) < 100))%>%\n  filter(!str_detect(section, \"L\"))\n\nhead(enrollments)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  dept number section   crn                                                name\n1 AMST    112      01 10318         Introduction to African American Literature\n2 AMST    194      01 10073              Introduction to Asian American Studies\n3 AMST    194      F1 10072 What’s After White Empire - And Is It Already Here?\n4 AMST    203      01 10646 Politics and Inequality: The American Welfare State\n5 AMST    205      01 10842                         Trans Theories and Politics\n6 AMST    209      01 10474                   Civil Rights in the United States\n   days            time      room             instructor avail max enroll\n1 M W F 9:40 - 10:40 am  MAIN 009       Daylanne English     3  20     17\n2 M W F  1:10 - 2:10 pm MUSIC 219          Jake Nagasawa    -4  16     20\n3  T R   3:00 - 4:30 pm   HUM 214 Karin Aguilar-San Juan     0  14     14\n4 M W F 9:40 - 10:40 am  CARN 305          Lesley Lavery     3  25     22\n5  T R   3:00 - 4:30 pm  MAIN 009              Myrl Beam    -2  20     22\n6   W   7:00 - 10:00 pm  MAIN 010         Walter Greason    -1  15     16\n```\n\n\n:::\n:::\n\n\n\\\n\\\n\\\n\\\n\n### Exercise 6: Enrollment & departments {.unnumbered}\n\nExplore enrollments by department. *You* decide what research questions to focus on. Use both visual and numerical summaries.\n\n\\\n\\\n\\\n\\\n\n### Exercise 7: Enrollment & faculty {.unnumbered}\n\nLet's now explore enrollments by instructor. In doing so, we have to be cautious of cross-listed courses that are listed under multiple different departments. Uncomment the code lines in the chunk below for an example.\n\n::: {.callout-tip title=\"Commenting/Uncommenting Code\"}\n\nTo comment/uncomment several lines of code at once, highlight them then click <kbd>ctrl/cmd+shift+c</kbd>.\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n enrollments |>\n   filter(dept %in% c(\"STAT\", \"COMP\"), number == 112, section == \"01\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  dept number section   crn                         name  days           time\n1 COMP    112      01 10248 Introduction to Data Science  T R  3:00 - 4:30 pm\n2 STAT    112      01 10249 Introduction to Data Science  T R  3:00 - 4:30 pm\n      room        instructor avail max enroll\n1 OLRI 254 Brianna Heggeseth     1  28     27\n2 OLRI 254 Brianna Heggeseth     1  28     27\n```\n\n\n:::\n:::\n\n\nNotice that these are the exact same section! In order to not double count an instructor's enrollments, we can keep only the courses that have `distinct()` *combinations* of `days, time, instructor` values.  Uncomment the code lines in the chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n enrollments_2 <- enrollments |> \n   distinct(days, time, instructor, .keep_all = TRUE)\n\n# NOTE: By default this keeps the first department alphabetically\n# That's fine because we won't use this to analyze department enrollments!\n# enrollments_2 |> \n#   filter(instructor == \"Brianna Heggeseth\", name == \"Introduction to Data Science\")\n```\n:::\n\n\n*Now*, explore enrollments by instructor. *You* decide what research questions to focus on. Use both visual and numerical summaries.\n\nCAVEAT: The above code doesn't deal with *co-taught* courses that have more than one instructor. Thus instructors that co-taught are recorded as a pair, and their co-taught enrollments aren't added to their total enrollments. This is tough to get around with how the data were scraped as the instructor names are smushed together, not separated by a comma!\n\n\n::: {.cell}\n\n:::\n\n\n\\\n\\\n\\\n\\\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}