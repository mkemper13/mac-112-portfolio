[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "COMP/STAT112 Notebook",
    "section": "",
    "text": "Introduction\nThis is my online notebook for COMP/STAT112 course taken at Macalester College. Please, use the side bar on the left for navigation.\nSecond day of class. We learned how to render and push the changes to github. Most people in class are very confused.\n9/10 Just finished Homework 1 and got it submitted to GitHub. Finally think I got it to work. I am now going to do the reading for class tomorrow and then fill out the survey on the central form.\n9/16: Good reminder from this morning’s class: Box plots are constructed from five numbers - the minimum, 25th percentile, median, 75th percentile, and maximum value of a quantitative variable.\n9/18: Just finished with Homework 2! Feeling pretty good about data visualization and creating plots.\n9/20: Working on in-class activity but I got this error message: “Downloading GitHub repo ropensci/rnaturalearthhires@HEAD” I think I have finally got the naturalearth package to load and then we ran out of time. I got all the way to exercise 6. About to go fill out the central form for this.\n10/1: Notes from Data Wrangling section:\nThe goals of Unit 2 are to explore how to:\nGet data into the tidy shape / format we need for analysis. For example, we might want to: keep only certain observations define new variables reformat or “clean” existing variables combine various datasets process “string” or text data Numerically (not just visually) explore and summarize various characteristics of the variables in our dataset.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "activities/README.html",
    "href": "activities/README.html",
    "title": "Activities",
    "section": "",
    "text": "All activities live here.",
    "crumbs": [
      "Activities"
    ]
  },
  {
    "objectID": "activities/activity-03.html",
    "href": "activities/activity-03.html",
    "title": "3  Activity 03",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nhikes &lt;- read.csv(\"https://mac-stat.github.io/data/high_peaks.csv\")\n\n\n#Exercise 1\n# a) bar graph\n# b) histogram or continuous plot\n\n\n# Exercise 2\nggplot(hikes, aes(x = rating))\n\n\n\n\n\n\n\n# error message says cannot find ggplot...this is because I didn't load the packages in this file.\n\n\nlibrary(tidyverse)\n\n\n# Exercise 3\nggplot(hikes, aes(x = rating))\n\n\n\n\n\n\n\n\n\n#Exercise 4\n# COMMENT on the change in the code and the corresponding change in the plot\nggplot(hikes, aes(x = rating)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n# This one labels the x and y axis instead of the generic labels. \nggplot(hikes, aes(x = rating)) +\n  geom_bar() +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n\n# Bars are colored blue\nggplot(hikes, aes(x = rating)) +\n  geom_bar(fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n\n# Orange outline around the bars\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n\n\n\n\n\n\n\n\n# Background is white instead of gray\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\")  +\n  labs(x = \"Rating\", y = \"Number of hikes\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n# Exercise 5\n\n#Part a\n#The '+' is for adding new variables to the plot, for when we need to add \"layers\".\n#Geom is probably short for geometry, so it knows to add a rectangular bar. \n#Labs is to label the axis'\n#Color is the outline of the bar and fill is to fill in the color. \n\n#Part b\n#From the bar chart we learned the number of hikes for each rating, easy,moderate, and difficult. \n\n#Part c\n# I don't like the order of the ratings on the x-axis.",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Activity 03</span>"
    ]
  },
  {
    "objectID": "activities/activity-04.html",
    "href": "activities/activity-04.html",
    "title": "4  activity-04.qmd",
    "section": "",
    "text": "4.1 4 Bivariate Viz\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\n# Load data\nelections &lt;- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\n# Check it out\nhead(elections)\n\n  state_name state_abbr historical    county_name county_fips total_votes_20\n1    Alabama         AL        red Autauga County        1001          27770\n2    Alabama         AL        red Baldwin County        1003         109679\n3    Alabama         AL        red Barbour County        1005          10518\n4    Alabama         AL        red    Bibb County        1007           9595\n5    Alabama         AL        red  Blount County        1009          27588\n6    Alabama         AL        red Bullock County        1011           4613\n  repub_pct_20 dem_pct_20 winner_20 total_votes_16 repub_pct_16 dem_pct_16\n1        71.44      27.02     repub          24661        73.44      23.96\n2        76.17      22.41     repub          94090        77.35      19.57\n3        53.45      45.79     repub          10390        52.27      46.66\n4        78.43      20.70     repub           8748        76.97      21.42\n5        89.57       9.57     repub          25384        89.85       8.47\n6        24.84      74.70       dem           4701        24.23      75.09\n  winner_16 total_votes_12 repub_pct_12 dem_pct_12 winner_12 total_population\n1     repub          23909        72.63      26.58     repub            54907\n2     repub          84988        77.39      21.57     repub           187114\n3     repub          11459        48.34      51.25       dem            27321\n4     repub           8391        73.07      26.22     repub            22754\n5     repub          23980        86.49      12.35     repub            57623\n6       dem           5318        23.51      76.31       dem            10746\n  percent_white percent_black percent_asian percent_hispanic per_capita_income\n1            76            18             1                2             24571\n2            83             9             1                4             26766\n3            46            46             0                5             16829\n4            75            22             0                2             17427\n5            88             1             0                8             20730\n6            22            71             0                6             18628\n  median_rent median_age\n1         668       37.5\n2         693       41.5\n3         382       38.3\n4         351       39.4\n5         403       39.6\n6         276       39.6\n#Exercise 0\n#Part a 43%\nggplot(elections, aes(x = winner_20)) +\n  geom_bar()\n#Part b\nggplot(elections, aes(x = repub_pct_20)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n#Exercise 1\nggplot(elections, aes(x = repub_pct_16, y = repub_pct_20)) +\n  geom_point()\n#Exercise 2 \n ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16))\n\n\n\n\n\n\n\n geom_point()\n\ngeom_point: na.rm = FALSE\nstat_identity: na.rm = FALSE\nposition_identity\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point()\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(shape = 3)\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16, colour = \"blue\")) +\n  geom_point()\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_text(aes(label = state_abbr))\n#Exercise 3\n#Republican suppport in 2020 and in 2016 appear to have a strong positive relationship. It seems as if Texas tends to deviate from this trend.\n#Exercise 4\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth()\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n#a)\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_smooth()\n\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n#b)\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n#Exercise 5\nggplot(elections, aes(y = median_rent, x = repub_pct_20)) +\n  geom_point()\n\n\n\n\n\n\n\n#This seems to have a slight negative relationship\nggplot(elections, aes(y = median_age, x = repub_pct_20)) +\n  geom_point()\n\n\n\n\n\n\n\n#This seems to have a very small positve relationship\n#Exercise 6\n#This doesn't give a clear picture of how the voter support in 2020 is related to historical votership. You can't really see count very well.\n#Exercise 7\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_violin()\n\n\n\n\n\n\n\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_boxplot()\n#Red states have a higher median than both blue and purple states for republican votership in 2020. Red states also have the most outliers between the three.\n#Exercise 8 \nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density()",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>activity-04.qmd</span>"
    ]
  },
  {
    "objectID": "activities/activity-05.html",
    "href": "activities/activity-05.html",
    "title": "",
    "section": "",
    "text": "Activities5  activity-05.html Code\n\n\n\n\n5 Multivariate Viz\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\n\n\neducation &lt;- read.csv(\"https://mac-stat.github.io/data/sat.csv\")\nhead(education)\n\n       State expend ratio salary frac verbal math  sat  fracCat\n1    Alabama  4.405  17.2 31.144    8    491  538 1029   (0,15]\n2     Alaska  8.963  17.6 47.951   47    445  489  934 (45,100]\n3    Arizona  4.778  19.3 32.175   27    448  496  944  (15,45]\n4   Arkansas  4.459  17.1 28.934    6    482  523 1005   (0,15]\n5 California  4.992  24.0 41.078   45    417  485  902  (15,45]\n6   Colorado  5.443  18.4 34.571   29    462  518  980  (15,45]\n\n\n\n#Exercise 1\n#part a)\nggplot(education, aes(x = sat)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n#part b) Sat scores range from roughly below 900 to 1100. It appears that a lot of people have scored in the 900 range and then again from 1000-1100. This shape in non-normal with a big gap between 900 and 1000. \n\n\n#Exercise 2\n#part a)\nggplot(education, aes(y = expend, x = sat)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nggplot(education, aes(y = salary, x = sat)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n#part b)\n#Expend and sat scores seem to have a negative relationship, as sat scores increase, expenditures seem to go down. This surprises me. I was thinking it would be the opposite. \n\n\n#Exercise 3\nggplot(education, aes(y = sat, x = salary, color = expend)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: The following aesthetics were dropped during statistical transformation:\ncolour.\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?\n\n\n\n\n\n\n\n\n\n\n#Exercise 4\nggplot(education, aes(y = sat, x = salary, color = cut(expend, 3))) + \n  geom_point() + \n  geom_smooth(se = FALSE, method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nStates with lower salaries and expenditures tend to have higher SAT scores.\n\n#Exercise 5\n#Part a\nggplot(education, aes(x = fracCat)) + \n  geom_bar()\n\n\n\n\n\n\n\n\n\n#Part b\nggplot(education, aes(x = sat, fill = fracCat)) + \n  geom_density(alpha = 0.5)\n\n\n\n\n\n\n\n\nThe more students in a state that take the SAT, the lower the average scores tend to be. This is probably related to self-selection.\n\n#Part c\nggplot(education, aes(y = sat, x = expend, color = fracCat)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nWhen we control for the fraction of students that take the SAT, SAT scores increase with expenditure.\nPart d Student participation tends to be lower among states with lower expenditures (which are likely also the states with higher ed institutions that haven’t historically required the SAT). Those same states tend to have higher SAT scores because of the self-selection of who participates.",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>activity-05.html</span>"
    ]
  },
  {
    "objectID": "activities/activity-06.html",
    "href": "activities/activity-06.html",
    "title": "6  Part 1: Interactive points on a map with leaflet",
    "section": "",
    "text": "Exercise 1: A leaflet with markers / points\nEarlier this semester, I asked for the latitude and longitude of one of your favorite places. I rounded these to the nearest whole number, so that they’re near to but not exactly at those places. Let’s load the data and map it!\nfave_places &lt;- read.csv(\"https://ajohns24.github.io/data/112/our_fave_places.csv\")\n\n# Check it out\nhead(fave_places)\n\n  latitude longitude\n1       46      -123\n2       33        52\n3       48       -90\n4       36      -112\n5       59        25\n6       39      -106",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Part 1: Interactive points on a map with `leaflet`</span>"
    ]
  },
  {
    "objectID": "activities/activity-06.html#solutions",
    "href": "activities/activity-06.html#solutions",
    "title": "6  Part 1: Interactive points on a map with leaflet",
    "section": "6.1 Solutions",
    "text": "6.1 Solutions",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Part 1: Interactive points on a map with `leaflet`</span>"
    ]
  },
  {
    "objectID": "activities/activity-07.html",
    "href": "activities/activity-07.html",
    "title": "7  Activity 7",
    "section": "",
    "text": "Exercise 1: Professionalism\nLet’s examine weather in 3 Australian locations.\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\nThe following plot is fine for things like homework or just playing around. But we’ll make it more “professional” looking below.\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point()\n\nWarning: Removed 27 rows containing missing values or values outside the scale range\n(`geom_point()`).",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Activity 7</span>"
    ]
  },
  {
    "objectID": "activities/activity-07.html#footnotes",
    "href": "activities/activity-07.html#footnotes",
    "title": "7  Activity 7",
    "section": "",
    "text": "https://en.wikipedia.org/wiki/W._E._B._Du_Bois↩︎\nB. S. Baumer, D. T. Kaplan, and N. J. Horton, Modern Data Science with R, 2017, p. 15.↩︎",
    "crumbs": [
      "Activities",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Activity 7</span>"
    ]
  },
  {
    "objectID": "notes/README.html",
    "href": "notes/README.html",
    "title": "Notes",
    "section": "",
    "text": "All notes live here.",
    "crumbs": [
      "Notes"
    ]
  },
  {
    "objectID": "notes/note-01.html",
    "href": "notes/note-01.html",
    "title": "8  Note 01",
    "section": "",
    "text": "Introduction\nThis is my online notebook for COMP/STAT112 course taken at Macalester College. Please, use the side bar on the left for navigation.\nSecond day of class. We learned how to render and push the changes to github. Most people in class are very confused.\n9/10 Just finished Homework 1 and got it submitted to GitHub. Finally think I got it to work. I am now going to do the reading for class tomorrow and then fill out the survey on the central form.",
    "crumbs": [
      "Notes",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Note 01</span>"
    ]
  }
]